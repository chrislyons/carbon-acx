name: CI

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        backend: [csv, duckdb]
    env:
      ACX_DATA_BACKEND: ${{ matrix.backend }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Check README make targets
        run: python tools/check_readme_make_targets.py

      - name: Install Poetry
        run: pip install poetry==1.7.1

      - name: Configure Poetry
        run: poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install --with dev --extras db --no-root

      - name: Verify lockfile consistency
        run: poetry lock --check

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Build database-backed artifacts
        if: matrix.backend == 'csv'
        run: |
          set -euo pipefail
          make db_init db_import build_db
          python tools/record_calc_outputs.py "SQLite" "SQLITE_OUTPUTS"
          make build_csv
          python tools/record_calc_outputs.py "CSV" "CSV_OUTPUTS"

      - name: Diff CSV and SQLite outputs
        if: matrix.backend == 'csv'
        run: |
          set -euo pipefail
          if [ -z "${CSV_OUTPUTS:-}" ] || [ -z "${SQLITE_OUTPUTS:-}" ]; then
            echo "Expected calc/outputs directories for CSV and SQLite builds" >&2
            exit 1
          fi
          diff -ru \
            <(grep -h -v '"generated_at":' "${CSV_OUTPUTS}"/*) \
            <(grep -h -v '"generated_at":' "${SQLITE_OUTPUTS}"/*)

      - name: Build packages
        run: make build site package sbom

      - name: Upload export_view.json
        uses: actions/upload-artifact@v4
        with:
          name: export-view-${{ matrix.backend }}-${{ github.run_id }}
          path: dist/artifacts/**/${{ matrix.backend }}/calc/outputs/export_view.json
          if-no-files-found: error

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ matrix.backend }}-${{ github.run_id }}
          path: dist/sbom/cyclonedx.json
          if-no-files-found: error

      - name: Vulnerability scan
        run: poetry run pip-audit --strict

      - name: Upload dist artifacts bundle
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts-${{ matrix.backend }}-${{ github.run_id }}
          path: dist/artifacts
          if-no-files-found: error

      - name: Upload static site bundle
        uses: actions/upload-artifact@v4
        with:
          name: dist-site-${{ matrix.backend }}-${{ github.run_id }}
          path: dist/site
          if-no-files-found: error

  backend-parity:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Download CSV export
        uses: actions/download-artifact@v4
        with:
          name: export-view-csv-${{ github.run_id }}
          path: parity/csv

      - name: Normalize CSV export path
        run: |
          set -euo pipefail
          csv_file="$(find parity/csv -name export_view.json -print -quit)"
          if [ -z "${csv_file}" ]; then
            echo "export_view.json from CSV backend artifact not found" >&2
            exit 1
          fi
          mv "${csv_file}" parity/csv/export_view.json

      - name: Download DuckDB export
        uses: actions/download-artifact@v4
        with:
          name: export-view-duckdb-${{ github.run_id }}
          path: parity/duckdb

      - name: Normalize DuckDB export path
        run: |
          set -euo pipefail
          duckdb_file="$(find parity/duckdb -name export_view.json -print -quit)"
          if [ -z "${duckdb_file}" ]; then
            echo "export_view.json from DuckDB backend artifact not found" >&2
            exit 1
          fi
          mv "${duckdb_file}" parity/duckdb/export_view.json

      - name: Diff backend exports
        run: python tools/diff_exports.py parity/csv/export_view.json parity/duckdb/export_view.json

  compute-smoke:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install root dependencies
        run: npm ci

      - name: Install site dependencies
        run: npm --prefix site ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Seed development database
        run: npm run dev:seed

      - name: Run compute smoke test
        env:
          CI: 'true'
        run: bash scripts/doctor_post_pr13.sh

      - name: Upload Playwright artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-smoke-artifacts
          path: |
            playwright-report
            test-results
          if-no-files-found: ignore

      - name: Upload smoke logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: doctor-logs
          path: /tmp/doctor-post-pr13*.log
          if-no-files-found: ignore

  deploy-pages:
    needs: [build, backend-parity, compute-smoke]
    if: github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download static site
        uses: actions/download-artifact@v4
        with:
          name: dist-site-csv-${{ github.run_id }}
          path: dist-site

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: dist-site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
