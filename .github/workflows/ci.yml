---
name: CI

'on':
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  actions: write

jobs:
  lint-yaml:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: .github/workflows
          config_file: .yamllint.yml

  build-static:
    runs-on: ubuntu-latest
    needs: [lint-yaml]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'

      - uses: pnpm/action-setup@v4
        with:
          version: 10.5.2
          run_install: false

      - name: Install workspace dependencies
        run: pnpm install --frozen-lockfile -w

      - name: Install web workspace dependencies
        run: pnpm --filter carbon-acx-web install --frozen-lockfile

      - name: Install site dependencies
        working-directory: site
        run: pnpm install --frozen-lockfile

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "1.8.3"

      - name: Install validator dependencies
        run: pip install -r tools/validator/requirements.txt

      - name: Install deps
        run: poetry install --no-interaction --no-root --extras "db"

      - name: Build artifacts (CSV backend)
        env:
          ACX_GENERATED_AT: "1970-01-01T00:00:00+00:00"
          ACX_DATA_BACKEND: "csv"
          ACX_OUTPUT_ROOT: "dist/artifacts"
          ACX040_HASHED: "1"
          PYTHONPATH: "."
        run: |
          make build
          make verify_manifests
          make validate-manifests
          make validate-diff-fixtures
          make build-static

      - name: Upload data artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/artifacts

      - name: Upload static site bundle
        uses: actions/upload-artifact@v4
        with:
          name: dist-site
          path: dist/site

  tests:
    runs-on: ubuntu-latest
    needs: [build-static]
    steps:
      - uses: actions/checkout@v4
      - name: Guard â€” fail if binaries slipped into PR
        run: |
          set -euo pipefail
          for forbidden in refs/raw refs/normalized; do
            if git ls-files --error-unmatch "${forbidden}/*" \
              >/dev/null 2>&1;
            then
              echo "::error::Binary/normalized files under refs/* must not be" \
                "committed."
              exit 1
            fi
          done
          LARGE=$( \
            git ls-files refs | while read -r path; do
              if [ -f "$path" ] && [ "$(wc -c < "$path")" -gt 65536 ]; then
                echo "$path"
              fi
            done | tr -s '\n' ' '
          )
          if [ -n "$LARGE" ]; then
            echo "::error::Large files detected under refs/: $LARGE"
            exit 1
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: '20.19.4'
      - uses: pnpm/action-setup@v4
        with:
          version: 10.5.2
          run_install: false
      - name: Install workspace dependencies
        run: pnpm install --frozen-lockfile -w
      - name: Install web workspace dependencies
        run: pnpm --filter carbon-acx-web install --frozen-lockfile
      - name: Install site dependencies
        working-directory: site
        run: pnpm install --frozen-lockfile
      - name: Run site tests
        working-directory: site
        run: pnpm test
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: abatilo/actions-poetry@v3
        with:
          poetry-version: "1.8.3"
      - run: poetry install --no-interaction --extras "db"
      - name: Run pytest
        run: poetry run pytest -q
